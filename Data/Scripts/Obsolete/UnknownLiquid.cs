using System;using Server;using Server.Network;using System.Text;using Server.Items;using Server.Misc;using Server.Mobiles;namespace Server.Items{	public class ItemRemovalTimer : Timer 	{ 		private Item i_item; 		public ItemRemovalTimer( Item item ) : base( TimeSpan.FromSeconds( 10.0 ) ) 		{ 			Priority = TimerPriority.OneSecond; 			i_item = item; 		} 		protected override void OnTick() 		{ 			if (( i_item != null ) && ( !i_item.Deleted )) 				i_item.Delete(); 		} 	} 	public class Vomit : Item 	{ 		[Constructable] 		public Vomit() : base( Utility.RandomList( 0xf3b, 0xf3c ) ) 		{ 			Name = "a puddle of vomit"; 			Hue = 0x557; 			Movable = false;			ItemRemovalTimer thisTimer = new ItemRemovalTimer( this ); 			thisTimer.Start(); 		} 		public override void OnSingleClick( Mobile from ) 		{ 			this.LabelTo( from, this.Name ); 		}   		public Vomit( Serial serial ) : base( serial ) 		{ 		} 		public override void Serialize(GenericWriter writer) 		{ 			base.Serialize( writer ); 			writer.Write( (int) 0 ); 		} 		public override void Deserialize(GenericReader reader) 		{ 			base.Deserialize( reader ); 			int version = reader.ReadInt(); 			this.Delete(); // none when the world starts 		} 	}	public class UnknownLiquid : Item	{		[Constructable]		public UnknownLiquid() : this( 1 )		{		}		[Constructable]		public UnknownLiquid( int level ) : base( 0x0EFC )		{			ItemID = Utility.RandomList( 0x0EFC, 0x0E2B, 0x0E2C, 0x0E2A, 0x0E26, 0x0E27, 0x0E25, 0x0E24, 0x09C7, 0x099F, 0x099B );			string sLiquid = "a strange";			switch( Utility.RandomMinMax( 0, 6 ) )			{				case 0: sLiquid = "an odd"; break;				case 1: sLiquid = "an unusual"; break;				case 2: sLiquid = "a bizarre"; break;				case 3: sLiquid = "a curious"; break;				case 4: sLiquid = "a peculiar"; break;				case 5: sLiquid = "a strange"; break;				case 6: sLiquid = "a weird"; break;			}			Name = sLiquid + " bottle of liquid";			Hue = Utility.RandomColor(0);			Amount = 1;			Stackable = false;			Weight = 0.0 + level;		}		public UnknownLiquid( Serial serial ) : base( serial )		{		}		public override void OnDoubleClick( Mobile from )		{			if ( !Movable )			{				from.SendMessage( "That cannot move so you cannot identify it." );				return;			}			else if ( !from.InRange( this.GetWorldLocation(), 3 ) )			{				from.SendMessage( "You will need to get closer to identify that." );				return;			}			else if ( !IsChildOf( from.Backpack ) && MySettings.S_IdentifyItemsOnlyInPack ) 			{				from.SendMessage( "This must be in your backpack to identify." );				return;			}			else			{				if ( from.CheckSkill( SkillName.Tasting, -5, 125 ) )				{					if ( from.Body.IsHuman && !from.Mounted )						from.Animate( 34, 5, 1, true, false, 0 );					from.PlaySound( 0x2D6 );					Server.Items.UnknownLiquid.GivePotion( this, from );				}				else				{					int nReaction = Utility.RandomMinMax( 0, 10 );					if ( nReaction == 1 )					{						from.PlaySound( from.Female ? 813 : 1087 );						from.Say( "*vomits*" );						if ( !from.Mounted ) 							from.Animate( 32, 5, 1, true, false, 0 );                     						Vomit puke = new Vomit(); 						puke.Map = from.Map; 						puke.Location = from.Location;						from.SendMessage("You fail to identify the liquid, convulsing and spilling the bottle.");					}					else if ( nReaction == 2 )					{						from.PlaySound( from.Female ? 798 : 1070 );						from.Say( "*hiccup!*" );						from.SendMessage("You fail to identify the liquid, spasming and spilling the bottle.");					}					else if ( nReaction == 3 )					{						from.PlaySound( from.Female ? 792 : 1064 );						from.Say( "*farts*" );						from.SendMessage("You fail to identify the liquid, feeling gassy...you dump it out.");					}					else if ( nReaction == 4 )					{						from.PlaySound( from.Female ? 785 : 1056 );						from.Say( "*cough!*" );										if ( !from.Mounted )							from.Animate( 33, 5, 1, true, false, 0 );						from.SendMessage("You fail to identify the liquid, coughing and spilling the bottle.");					}					else if ( nReaction == 5 )					{						from.PlaySound( from.Female ? 784 : 1055 );						from.Say( "*clears throat*" );						if ( !from.Mounted )							from.Animate( 33, 5, 1, true, false, 0 );						from.SendMessage("You fail to identify the liquid, hurting your throat...you dump out the bottle.");					}					else if ( nReaction == 6 )					{						from.PlaySound( from.Female ? 782 : 1053 );						from.Say( "*burp!*" );						if ( !from.Mounted )							from.Animate( 33, 5, 1, true, false, 0 );						from.SendMessage("You fail to identify the liquid, accidentally drinking the entire bottle.");					}					else if ( nReaction > 6 )					{						int nPoison = Utility.RandomMinMax( 0, 10 );						from.Say( "Poison!" );						Effects.SendLocationParticles( EffectItem.Create( from.Location, from.Map, EffectItem.DefaultDuration ), 0x36B0, 1, 14, 63, 7, 9915, 0 );						from.PlaySound( Utility.RandomList( 0x30, 0x2D6 ) );							if ( nPoison > 9 ) { from.ApplyPoison( from, Poison.Deadly ); }							else if ( nPoison > 7 ) { from.ApplyPoison( from, Poison.Greater ); }							else if ( nPoison > 4 ) { from.ApplyPoison( from, Poison.Regular ); }							else { from.ApplyPoison( from, Poison.Lesser ); }						from.SendMessage( "Poison!");					}					else					{						from.PlaySound( from.Female ? 820 : 1094 );						from.Say( "*spits*" );						if ( !from.Mounted )							from.Animate( 6, 5, 1, true, false, 0 );						from.SendMessage("You fail to identify the liquid, spitting it out and dumping the bottle.");					}				}				this.Delete();			}		}		public static void MakeSpaceAceLiquid( Item item )		{			item.ItemID = 0x1FDD;			item.Hue = Utility.RandomColor(0);			string sLiquid = "a strange";			switch( Utility.RandomMinMax( 0, 6 ) )			{				case 0: sLiquid = "an odd"; break;				case 1: sLiquid = "an unusual"; break;				case 2: sLiquid = "a bizarre"; break;				case 3: sLiquid = "a curious"; break;				case 4: sLiquid = "a peculiar"; break;				case 5: sLiquid = "a strange"; break;				case 6: sLiquid = "a weird"; break;			}			item.Name = sLiquid + " vial of liquid";		}		public static void GivePotion( Item brew, Mobile from )		{		}        public override void AddNameProperties(ObjectPropertyList list)		{            base.AddNameProperties(list);			list.Add( 1049644, "Unidentified"); // PARENTHESIS        }		public override void Serialize( GenericWriter writer )		{			base.Serialize( writer );			writer.Write( (int) 0 ); // version		}		public override void Deserialize( GenericReader reader )		{			base.Deserialize( reader );			int version = reader.ReadInt();			Timer.DelayCall( TimeSpan.FromSeconds( 1.0 ), new TimerStateCallback( Cleanup ), this );		}		private void Cleanup( object state )		{			Item item = Loot.RandomPotion( Utility.Random(12)+1, true );			Server.Misc.Cleanup.DoCleanup( (Item)state, item );		}	}}